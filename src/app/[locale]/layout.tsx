// types
import type { Metadata } from "next";
import { ReactNode } from "react";

// styles
import "../globals.css";

// next lib
import { notFound } from "next/navigation";

// providers
import ThemeContextProvider from "@/context/theme-provider";

// next-intl
import { NextIntlClientProvider, Locale, hasLocale } from "next-intl";
import { setRequestLocale } from "next-intl/server";
import { routing } from "@/i18n/routing";

// components
import ThemeSwitcher from "@/components/theme-switcher";
import LocaleSwitcher from "@/components/locale-switcher";

type LayoutProps = {
  children: ReactNode;
  params: Promise<{ locale: Locale }>;
};

export function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function LocaleLayout({ children, params }: LayoutProps) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  // Enable static rendering
  setRequestLocale(locale);

  return (
    <html lang={locale} suppressHydrationWarning>
      <body className="bg-amber-50 antialiased dark:bg-zinc-800">
        <ThemeContextProvider>
          <NextIntlClientProvider>
            <ThemeSwitcher />
            <LocaleSwitcher />
            <main>{children}</main>
          </NextIntlClientProvider>
        </ThemeContextProvider>
      </body>
    </html>
  );
}
